@page
@model RecipeApp.Pages.Recipe.IndexModel

@{
    ViewData["Title"] = "Index";
    int i = 0;
    string rate = "";
}
<style>
    .container-img {
        width: 300px; /* İstediğiniz genişlik */
        height: 200px; /* İstediğiniz yükseklik */
        overflow: hidden;
    }

    .container-img img {
        width: 100%;
        height: auto;
        object-fit: cover;
        object-position: center center;
    }
</style>


<div class="d-flex justify-content-between align-items-center mb-5">
    <h1>Recipes</h1>
    <form class="d-flex flex-row align-items-center">
        <div class="input-group">
            <input type="search" class="form-control form-control-dark text-bg-dark" placeholder="Search recipes..." aria-label="Search" asp-for="SearchString">
            <button class="btn btn-secondary btn-success" type="submit" value="Filter">
                Search
            </button>
        </div>
    </form>
    <form asp-page="Create">

        <button type="submit" class="btn btn-warning d-flex justify-content-center align-items-center">
            <svg xmlns="http://www.w3.org/2000/svg" style="width: 32px; height: 32px; margin-right: 8px" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-2 h-2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>New Recipe
        </button>

    </form>
</div>

<div class="container">
    <div class="row">
        @foreach (var item in Model.Recipe)
        {
            <div class="col-md-3">
                <div class="card d-flex mb-3">
                    <div class="container-img">
                        <img src="@Html.DisplayFor(modelItem => item.ImageUrl)" class="card-img-top">
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>

                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                        <p>
                            @if (Model.RecipeAverageRatingsList[i] == 0.0)
                            {
                                rate = "No rating";
                                i++;
                            }
                            else
                            {
                                rate = "Average rating: " + Model.RecipeAverageRatingsList[i].ToString() + " out of 5";
                                i++;
                            }
                            @rate
                        </p>

                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>

                        <div class="btn-group" role="group">
                            @if (item.UserId != Model.userId)
                            {
                                <a asp-page="./Details" class="btn btn-success btn-sm" asp-route-id="@item.Id">Details</a>
                                <a asp-page="/Rate" class="btn btn-warning btn-sm" asp-route-id="@item.Id">Rate</a>


                            }
                            else
                            {
                                <a asp-page="./Details" class="btn btn-success btn-sm" asp-route-id="@item.Id">Details</a>
                                <a asp-page="./Edit" class="btn btn-primary btn-sm" asp-route-id="@item.Id">Edit</a>
                                <a asp-page="./Delete" class="btn btn-danger btn-sm" asp-route-id="@item.Id">Delete</a>
                            }


                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


